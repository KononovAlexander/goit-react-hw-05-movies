{"version":3,"file":"static/js/553.38b35d00.chunk.js","mappings":"oRAGaA,EAAYC,EAAAA,GAAAA,IAAH,oEAITC,GAAMD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,wOAUHG,EAASH,EAAAA,GAAAA,IAAH,0CAGNI,EAAYJ,EAAAA,GAAAA,IAAH,8LAUTK,EAAQL,EAAAA,GAAAA,GAAH,yIAQLM,EAAWN,EAAAA,GAAAA,GAAH,8DAIRO,EAAOP,EAAAA,GAAAA,EAAH,kEAIJQ,EAAQR,EAAAA,GAAAA,IAAH,iFAKLS,EAAYT,EAAAA,GAAAA,GAAH,+EAMTU,EAAWV,EAAAA,GAAAA,GAAH,yLAURW,GAAaX,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,yD,SCrCvB,EA1BmB,SAAC,GAAa,IAAD,MAAXY,EAAW,EAAXA,MAEXC,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEnCC,EAAM,yCAAqCL,EAAMM,aACjDC,EAAO,IAAIC,KAAKR,EAAMS,cAAcC,cAC1C,OACI,4BACI,UAACrB,EAAD,CAAKsB,GAAIV,EAAT,WACA,SAAC,MAAD,CAAaW,KAAK,KAAKC,MAAQ,CAACC,YAAY,KAD5C,cAGA,UAAC3B,EAAD,YACI,SAACI,EAAD,CAAQwB,IAAKV,EAAQW,IAAKhB,EAAMiB,SAChC,UAACzB,EAAD,YACI,UAACC,EAAD,WAAQO,EAAMiB,OAAM,gCAAQV,EAAR,WACpB,UAACZ,EAAD,0BAAmBuB,KAAKC,MAA2B,GAArBnB,EAAMoB,cAApC,QACA,SAAC1B,EAAD,wBACA,SAACC,EAAD,UAAOK,EAAMqB,YACb,SAAC3B,EAAD,sBACA,SAACC,EAAD,oBAAOK,EAAMsB,cAAb,aAAO,EAAcC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAKtE,ECxBYC,EAAa,SAAC,GAAkB,IAAD,QAAfC,EAAe,EAAfA,SAEzB,OAEI,SAACzC,EAAD,CAAW0B,MAAO,CAACgB,UAAW,iBAAkBC,aAAa,kBAA7D,UACI,UAAClC,EAAD,YAEI,SAACC,EAAD,sCACA,UAACC,EAAD,YACI,yBAAI,SAACC,EAAD,CAAYY,GAAG,OAAOR,MAAO,CAAEC,KAAI,oBAAEwB,EAASzB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,KAA7D,qBACJ,yBAAI,SAACL,EAAD,CAAYY,GAAG,UAAUR,MAAO,CAAEC,KAAI,oBAAEwB,EAASzB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,KAAhE,8BAMvB,ECQD,EArBsB,WAClB,IAAO2B,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAwBE,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACMP,GAAW1B,EAAAA,EAAAA,MAEXkC,EAAKC,OAAON,EAAQO,QAAQ,KAAM,KAOxC,OANAC,EAAAA,EAAAA,YAAU,WACDH,IACLI,EAAAA,EAAAA,IAAYJ,GACXK,MAAK,SAAAC,GAASP,EAAQO,EAAM,GAChC,GAAC,CAAEN,KAGA,2BACMF,IAAQ,SAAC,EAAD,CAAWlC,MAAOkC,IAC1BA,IAAQ,SAACP,EAAD,CAAaC,SAAUA,KAChC,SAAC,KAAD,MAIZ,C","sources":["components/pages/MovieDetails/MovieCard.styled.js","components/pages/MovieDetails/MovieCard/MovieCard.jsx","components/pages/MovieDetails/MovieDescr/MovieDescr.jsx","components/pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n    display:flex;\n    padding: 20px 40px;\n`\nexport const Btn = styled(Link)`\n    margin-left:40px;\n    border: 1px grey solid;\n    border-radius:5px;\n    font-size:16px;\n    text-decoration:none;\n    padding:2px 5px;\n    alighn-items:middle;\n    background-color: transparent;\n`\nexport const Poster = styled.img`\n    width:200px;\n` \nexport const MovieInfo = styled.div`\n    display:flex;\n    flex-direction:column;\n    padding: 0 15px; \n    &:not(:first-child) {}\n    & p {\n        margin:10px 0;\n        font-size: 22px;\n    }\n`\nexport const Title = styled.h3`\n    font-size:36px;\n    margin:10px 0;\n    & span{\n        font-size:30px;\n        margin-left:10px;\n    }\n`\nexport const SubTitle = styled.h4`\n    font-size: 26px;\n    margin: 0;\n` \nexport const Text = styled.p`\n    margin:10px 0;\n    font-size: 10px;\n`\nexport const Descr = styled.div`\npadding: 0 40px;\ndisplay:flex;\nflex-direction:column;\n`\nexport const InfoTitle = styled.h5`\nfont-size: 18px;\nfont-weight: normal;\nmargin:0px 0;\n`\n\nexport const LinkList = styled.ul`\n    padding-left:24px;\n    margin:10px 0;\n    & li {\n        font-size:22px;\n        &:not(:last-child){\n            margin-bottom:16px;\n        }\n    }\n`\nexport const StyledLink = styled(Link)`\n    text-transform: capitalize;\n`","import { useLocation} from 'react-router-dom';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { Container, Poster, MovieInfo, Title, SubTitle, Text, Btn} from '../MovieCard.styled';\n\n const MovieCard = ({movie}) => {\n    const location = useLocation();\n    const PrevLink = location.state?.from ?? '/';\n\n    const poster = `https://image.tmdb.org/t/p/w200${movie.poster_path}`;\n    const date = new Date(movie.release_date).getFullYear()\n    return(\n        <div>\n            <Btn to={PrevLink}>\n            <HiArrowLeft size=\"14\" style= {{marginRight:5}} />\n                Go back</Btn>\n            <Container>\n                <Poster src={poster} alt={movie.title} /> \n                <MovieInfo>\n                    <Title>{movie.title}<span>({date})</span></Title>\n                    <Text>User score: {Math.round(movie.vote_average * 10)}%</Text>    \n                    <SubTitle>Overview</SubTitle>\n                    <Text>{movie.overview}</Text>    \n                    <SubTitle>Genres</SubTitle>\n                    <Text>{movie.genres?.map(genre => genre.name).join(' ')}</Text>           \n                </MovieInfo>\n            </Container>\n        </div>\n    )\n}\n\nexport default  MovieCard","// import { Link } from 'react-router-dom';\nimport { InfoTitle, Container, LinkList, StyledLink, Descr} from '../MovieCard.styled';\n\n\nexport const MovieDescr = ({ location} ) => {\n\n    return(\n\n        <Container style={{borderTop: '1px grey solid', borderBottom:'1px grey solid'}}>\n            <Descr>\n\n                <InfoTitle>Additional information</InfoTitle>\n                <LinkList>\n                    <li><StyledLink to=\"cast\" state={{ from: location.state?.from ?? '/' }}>Cast</StyledLink></li>\n                    <li><StyledLink to=\"reviews\" state={{ from: location.state?.from ?? '/' }}>Reviews</StyledLink></li>\n                </LinkList>   \n\n            </Descr>\n        </Container>\n    )\n}","import PropTypes from \"prop-types\";\nimport {getFilmById} from \"../../api\";\nimport { useState, useEffect } from \"react\";\nimport {  useParams, useLocation, Outlet } from 'react-router-dom';\nimport  MovieCard  from \"./MovieCard/MovieCard\";\nimport { MovieDescr } from \"./MovieDescr/MovieDescr\";\n\n const MovieDetails = () => {\n    const {movieId} = useParams();\n    const [film, setFilm] = useState({});\n    const location = useLocation();\n    \n    const id = Number(movieId.replace(/:/g, ''));\n    useEffect(() => {\n         if(!id) {return}\n        getFilmById(id)\n        .then(data => {setFilm(data)})\n    },[ id]);\n\n    return(\n        <div>\n             {film && <MovieCard movie={film} />}\n             {film && <MovieDescr  location={location}/>}\n             <Outlet /> \n\n        </div>\n    )\n}\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n    film:PropTypes.object }"],"names":["Container","styled","Btn","Link","Poster","MovieInfo","Title","SubTitle","Text","Descr","InfoTitle","LinkList","StyledLink","movie","PrevLink","useLocation","state","from","poster","poster_path","date","Date","release_date","getFullYear","to","size","style","marginRight","src","alt","title","Math","round","vote_average","overview","genres","map","genre","name","join","MovieDescr","location","borderTop","borderBottom","movieId","useParams","useState","film","setFilm","id","Number","replace","useEffect","getFilmById","then","data"],"sourceRoot":""}