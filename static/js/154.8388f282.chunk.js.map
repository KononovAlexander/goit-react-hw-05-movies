{"version":3,"file":"static/js/154.8388f282.chunk.js","mappings":"iPAGaA,EAAYC,EAAAA,GAAAA,GAAH,0FAKTC,EAAgBD,EAAAA,GAAAA,GAAH,0J,SCwC1B,EA1Ca,WACT,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,EAAKC,OAAON,EAAQO,QAAQ,KAAM,MAGxCC,EAAAA,EAAAA,YAAU,WACFH,IACJI,EAAAA,EAAAA,IAAmBJ,GAChBK,MAAK,SAAAC,GAAQ,OAAIP,EAAQO,EAASR,KAArB,IAEbS,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,IAGJ,GAAKF,EAEL,OACE,0BACI,SAACN,EAAD,UACKM,EAAKa,OACDb,EAAKc,KAAI,SAAAC,GAAK,OACX,UAACnB,EAAD,WACKmB,EAAMC,cACP,gBACEC,IAAG,UAXd,kCAW6BF,EAAMC,cACxBE,IAAKH,EAAMI,QAEb,gBAAKF,IAxBX,iGAyBMC,IAAKH,EAAMI,QAEX,uBAAIJ,EAAMI,QACV,uBAAIJ,EAAMK,cAVML,EAAMb,GADf,KAaN,wCAM5B,C","sources":["components/pages/MovieDetails/Cast/Cast.styled.js","components/pages/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components'\n\n\nexport const ActorList = styled.ul`\n    padding:0 100px;\n    margin:20px 0 0;\n    list-style:none;\n`\nexport const ActorListItem = styled.li`\n    font-size:16px;\n    margin-bottom:40px;\n    & p{\n        margin:10px 0 0;\n    }\n    & img {\n        width:90px;\n    }\n`","import {getFilmCreditsByID} from \"../../../api\";\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ActorList, ActorListItem } from \"./Cast.styled\";\n\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n    const id = Number(movieId.replace(/:/g, ''));\n    const incognito = 'https://st.depositphotos.com/1898481/3858/i/600/depositphotos_38585247-stock-photo-unnamed.jpg'\n\n    useEffect(() => {\n        if(!id){return}\n        getFilmCreditsByID(id)\n          .then(response => setCast(response.cast))\n    \n          .catch(error => console.log(error));\n      }, [id]);\n\n      const mainUrl = `https://image.tmdb.org/t/p/w400`;\n      if (!cast) return;\n\n      return(\n        <div>\n            <ActorList>\n                {cast.length ?\n                    (cast.map(actor => (\n                        <ActorListItem key={actor.id}>\n                            {actor.profile_path ?\n                            <img\n                              src={`${mainUrl + actor.profile_path}`}\n                              alt={actor.name}\n                            />:\n                            <img src={incognito} \n                            alt={actor.name}/>\n                            }\n                            <p>{actor.name}</p>\n                            <p>{actor.character}</p>\n                        </ActorListItem>\n                    ) )) : ( <p>Not Found</p>)\n                }\n            </ActorList>\n\n        </div>\n      )\n}\n\nexport default Cast;"],"names":["ActorList","styled","ActorListItem","movieId","useParams","useState","cast","setCast","id","Number","replace","useEffect","getFilmCreditsByID","then","response","catch","error","console","log","length","map","actor","profile_path","src","alt","name","character"],"sourceRoot":""}